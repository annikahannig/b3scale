
#
# Github Workflow for testing the application
#

name: Test

on: [ push, workflow_dispatch ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      # Install Go
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.16.x'

      # Formatting
      - name: Check formatting
        run: |
          test -z $(gofmt -l ./pkg)
          test -z $(gofmt -l ./cmd)

      # Vet
      - name: Vet
        run: |
          go vet ./pkg/...
          go vet ./cmd/...

      # Lint
      - name: Lint
        run: |
          go install golang.org/x/lint/golint@latest
          golint -set_exit_status ./pkg/...
          golint -set_exit_status ./cmd/...

      # Setup test environment
      - name: Setup Tests
        run: |
          psql -U postgres -c 'DROP DATABASE IF EXISTS b3scale_test'
          psql -U postgres -c 'CREATE DATABASE b3scale_test'
          psql -U postgres -d b3scale_test < ./db/schema/*.sql

      # Run Tests
      - name: Tests
        run: make test

      # Cleanup
      - name: Cleanup
        run: docker-compose down
        working-directory: ./dev
